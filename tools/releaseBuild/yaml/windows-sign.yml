steps:
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: current
    artifactName: release

- powershell: |
    $zipFilePath = '$(System.ArtifactsDirectory)\release\$(ARCHITECTURE)-symbols.zip'
    Get-ChildItem $zipFilePath -Verbose

    Expand-Archive $zipFilePath -Destination '$(System.ArtifactsDirectory)\Expanded' -Force

    $vstsCommandString = "vso[task.setvariable variable=Symbols]$(System.ArtifactsDirectory)\Expanded"
    Write-Host "sending " + $vstsCommandString
    Write-Host "##$vstsCommandString"
  displayName: Expand artifact $(ARCHITECTURE)-symbols.zip

- powershell: |
    $vstsCommandString = "vso[task.setvariable variable=SignedOutput]$(System.ArtifactsDirectory)\Signed"
    Write-Host "sending " + $vstsCommandString
    Write-Host "##$vstsCommandString"
  displayName: Define signedOutput variable

- template: EsrpSign.yml@ComplianceRepo
  parameters:
      # the folder which contains the binaries to sign
      buildOutputPath: $(Symbols)
      # the location to put the signed output
      signOutputPath: '$(SignedOutput)'
      # the certificate ID to use
      certificateId: "CP-230012"
      # The file pattern to use
      # If not using minimatch: comma separated, with * supported
      # If using minimatch: newline separated, with !, **, and * supported.
      # See link in the useMinimatch comments.
      pattern: '*.dll'
      # decides if the task should use minimatch for the pattern matching.
      # https://github.com/isaacs/minimatch#features
      useMinimatch: false

- powershell: |
    Compress-Archive -Path '$(SignedOutput)\*' -DestinationPath '$(SignedOutput)\win-$(ARCHITECTURE).zip'
  displayName: Compress signed binaries
  condition: eq(variables['SkipSigning'], 'false')

- powershell: |
    Get-ChildItem -Path '$(Symbols)\*' -Recurse | Copy-Item -Destination '$(SignedOutput)' -Force -Verbose
  displayName: Copy unsigned binaries as signing is skipped
  condition: eq(variables['SkipSigning'], 'True')

- template: uploadArtifact.yml
  parameters:
    artifactPath: '$(SignedOutput)'
    artifactFilter: 'win-*.zip'
    artifactName: 'signed'

- task: securedevelopmentteam.vss-secure-development-tools.build-task-antimalware.AntiMalware@3
  displayName: 'Run MpCmdRun.exe'
