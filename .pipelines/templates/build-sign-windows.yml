parameters:
  - name: ARCHITECTURE
    type: string
    default: 'x64'

    jobs:
      - job: Build_Sign_${{ parameters.ARCHITECTURE }}
        pool:
          type: windows
        displayName: Windows
        variables:
          - name: ob_outputDirectory
            value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
          - name: ob_signing_setup_enabled
            value: true
          - name: ARCHITECTURE
            value: ${{ parameters.ARCHITECTURE }}
        steps:
          - pwsh: |
              Get-ChildItem Env:\ | Out-String -Stream | Write-Verbose -Verbose
            displayName: Capture environment variables

          - pwsh: |
              $repoRoot = '$(Build.SourcesDirectory)'
              Import-Module $repoRoot\build.psm1 -Force
              Start-PSBootstrap -BuildWindowsNative
              Write-Verbose "Starting Start-BuildNativeWindowsBinaries" -Verbose
              Start-BuildNativeWindowsBinaries -Configuration 'Release' -Arch $(ARCHITECTURE) -Clean
              Write-Verbose "Completed Start-BuildNativeWindowsBinaries" -Verbose
              $buildOutputPath = Join-Path $repoRoot "src/powershell-win-core"

              if (-not (Test-Path $(ob_outputDirectory))) {
                  New-Item -ItemType Directory -Path $(ob_outputDirectory) -Force -Verbose
              }

              Copy-Item -Path "$buildOutputPath/*.dll","$buildOutputPath/*.pdb" -DestinationPath "$(ob_outputDirectory)" -Force
            displayName: 'Build'

          - task: onebranch.pipeline.signing@1
            displayName: Sign files
            inputs:
              command: 'sign'
              signing_profile: external_distribution
              files_to_sign: |
                **\*.exe;
                **\*.dll;
              search_root: $(ob_outputDirectory)


