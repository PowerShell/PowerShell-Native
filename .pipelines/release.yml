trigger: none

variables:
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  - name: LinuxContainerImage
    value: onebranch.azurecr.io/linux/ubuntu-2004:latest
  - name: WindowsContainerImage
    value: onebranch.azurecr.io/windows/ltsc2022/vse2022:latest

resources:
  repositories:
  - repository: templates
    type: git
    name: OneBranch.Pipelines/GovernedTemplates
    ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates  # The Official template may only be used by Production-classified pipelines

  parameters:
    featureFlags:
      WindowsHostVersion:
        Disk: Large
        Version: 2022
        Network: KS1
      incrementalSDLBinaryAnalysis: true
    cloudvault:
      enabled: false
    globalSdl:
      sbom:
        enabled: true
        packageName: Microsoft.PowerShell.Native
      codeql:
        compiled:
          enabled: true
      armory:
        enabled: false
      credscan:
        enabled: true
        scanFolder:  $(Build.SourcesDirectory)
      binskim:
        enabled: true
      apiscan:
        enabled: false

    stages:
    - stage: Build
      jobs:
      - job: BuildWindowsx64
        pool:
          type: windows

        variables:
          - name: ob_outputDirectory
            value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'

        steps:
        - pwsh: |
            Get-ChildItem Env:\ | Out-String -Stream | Write-Verbose -Verbose
          displayName: Capture environment variables

        - pwsh: |
            $repoRoot = '$(Build.SourcesDirectory)'
            Import-Module $repoRoot\build.psm1 -Force
            Start-PSBootstrap -BuildWindowsNative
            Write-Verbose "Starting Start-BuildNativeWindowsBinaries" -Verbose
            Start-BuildNativeWindowsBinaries -Configuration 'Release' -Arch x64 -Clean
            Write-Verbose "Completed Start-BuildNativeWindowsBinaries" -Verbose
            $buildOutputPath = Join-Path $repoRoot "src/powershell-win-core"
            Compress-Archive -Path "$buildOutputPath/*.dll" -DestinationPath "$(ob_outputDirectory)/win-x64-symbols.zip" -Verbose
          displayName: 'Build'
